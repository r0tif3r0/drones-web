.gradient {
	z-index: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient( rgba(0, 0, 0, 0.507), #20004d, black);
	background-size: 100% 100%;
    color: rgb(223, 191, 191)
}

.section {
	position: relative;
	width: 100%;
    height: 100%;
	overflow: hidden;
  }
  
  .background {
	position: absolute;
	inset: 0;
	z-index: 0;
	pointer-events: none;
  }
  
  .content {
	position: relative;
	z-index: 1;
	color: white;
	text-align: center;
  }

@property --glow-deg {
	syntax: "<angle>";
	inherits: true;
	initial-value: -90deg;
  }
  
  /* the colors don't need to be registed */
  @property --clr-1 {
	syntax: "<color>";
	inherits: true;
	initial-value: rgb(99, 0, 0);
  }
  
  @property --clr-2 {
	syntax: "<color>";
	inherits: true;
	initial-value: rgb(104, 104, 0);
  }
  
  @property --clr-3 {
	syntax: "<color>";
	inherits: true;
	initial-value: rgb(0, 75, 0);
  }
  
  @property --clr-4 {
	syntax: "<color>";
	inherits: true;
	initial-value: rgb(0, 0, 80);
  }
  
  @property --clr-5 {
	syntax: "<color>";
	inherits: true;
	initial-value: rgb(46, 0, 46);
  }

  .product_info {
	display: flex;
  }

  .drone {
	display: flex;
	align-items: center;
	padding-left: 200px;
  }
  
  .glowing_border {
	--gradient-glow: var(--clr-1), var(--clr-2), var(--clr-3), var(--clr-4),
	  var(--clr-5), var(--clr-1);
  
	margin-block: 3rem;
	padding: 8rem 5rem;
	max-width: 100ch;
  
	border: var(--border-width, 3px) solid transparent;
	border-left: 0;
	border-radius: 0 100vw 100vw 0;
	background: linear-gradient(var(--surface, canvas) 0 0) padding-box,
	  conic-gradient(from var(--glow-deg), var(--gradient-glow)) border-box;
  
	position: relative;
	isolation: isolate;
  
	animation: glow 10s infinite linear;
	color: inherit;

	.title {
		margin-bottom: 20px;
	}
  }
  
  @keyframes glow {
	100% {
	  --glow-deg: 270deg;
	}
  }
  
  .glowing_border::before,
  .glowing_border::after {
	content: "";
	// position: absolute;
	border-radius: inherit;
  }
  
  .glowing_border::before {
	z-index: -1;
	background: var(--surface, canvas);
	inset: 0.5rem;
	scale: 1.2 1;
	transform-origin: right;
	filter: blur(var(--glow-size, 1rem));
  }
  
  .glowing_border::after {
	z-index: -2;
	inset: -1.5rem;
	background: conic-gradient(from var(--glow-deg), var(--gradient-glow));
	filter: blur(var(--glow-size, 1rem));
	opacity: var(--glow-intensity, 0.125);
  }
  
  .glowing_border.right {
	margin-inline-start: auto;
	border-radius: 100vw 0 0 100vw;
	border: var(--border-width, 3px) solid transparent;
	border-right: 0;
  
	&::before {
	  transform-origin: left;
	}
  }
  
  @layer general-styling {
	* {
	  box-sizing: border-box;
	}
  
	html {
	  font-family: system-ui;
	  color-scheme: dark;
	}
  
	body {
	  margin: 0;
	  overflow-x: clip;
	}
  }

  @media (max-width: 1000px) {
	.background {
	  visibility: hidden;
	}
	.glowing_border {
		animation: none;
		padding: 5rem 3rem;
		max-width: 80ch;
	}
  }

  @media (max-width: 800px) {
	.glowing_border {
		padding: 4rem 2rem;
		max-width: 60ch;
	}
  }

  @media (max-width: 600px) {
	.glowing_border {
		padding: 3rem 1rem;

		&.right {
			padding: 3rem 1rem 3rem 4rem;
			margin-block: 0rem;
		}
	}
  }